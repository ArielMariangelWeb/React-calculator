{"version":3,"sources":["Calculator.js","index.js"],"names":["Calculator","useState","inputValue","setInputValue","buttons","handleButtonPress","e","target","value","type","className","map","button","onClick","key","eval","String","console","log","ReactDOM","render","document","getElementById"],"mappings":"2lBAEaA,WAAa,SAAbA,aAAoB,cAGOC,oDAAS,IAHhB,oNAGtBC,WAHsB,cAGVC,cAHU,cAMvBC,QAAU,CAAC,IAAK,IAAK,IAAK,IAAI,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,KAI5DC,kBAAmB,SAAEC,GACvBH,cAAe,CAAED,WAAaI,EAAEC,OAAOC,SAG3C,OACI,sHACI,yFACA,sEACA,uEACI,oEACKC,KAAK,OAELD,MAAQN,cAGhB,kEAAKQ,UAAU,WAITN,QAAQO,KAAK,SAAAC,GACZ,OAAO,qEAEGC,QAAUR,kBAEVG,MAASI,EACTE,IAAOF,GAGLA,MAMf,qEACGF,UAAU,KACVG,QAAS,kBAAMV,cAAc,KAAKK,MAAM,IAF3C,OAQD,sEAMA,qEACIE,UAAU,QACVG,QAAS,mBACLV,cACIY,KAAKC,OAAOd,cAEZe,QAAQC,IAAIhB,aAEpBM,MAAM,KARV,S,8DC5DhB,0DAMAW,IAASC,OAEL,kBAAC,IAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.8ea22a07.chunk.js","sourcesContent":["import React, { useState } from 'react'\r\n\r\nexport const Calculator = ( ) => {\r\n\r\n    //Create the hook useState\r\n    const [inputValue, setInputValue] = useState([]);\r\n\r\n    //Create the calculator buttons in an array\r\n    const buttons = [\"+\", \"-\", \"*\", \"/\",1, 2, 3, 4, 5, 6, 7, 8, 9, 0, \".\" ]\r\n\r\n    //Function that captures the 'value' property of each button, and at the same time,\r\n    //updates the 'inputValue' property of our hook through 'setInputValue'\r\n    const handleButtonPress= ( e ) =>{\r\n        setInputValue( [ inputValue + e.target.value ] )\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2>Basic calculator</h2>\r\n            <hr/>\r\n            <form>\r\n                <input \r\n                     type=\"text\"\r\n                     //Add the captured value of 'InputValue' of the different buttons pressed through the 'OnClick' function\r\n                     value={ inputValue }\r\n                />\r\n             </form>\r\n             <div className=\"buttons\">\r\n                {\r\n                    //With the 'map' loop we can read the data stored inside the 'buttons' array,\r\n                    // and then show it inside our 'input'\r\n                   buttons.map( button =>{\r\n                    return <button \r\n                              //Event that calls the 'handleButtonPress' function\r\n                              onClick={ handleButtonPress }\r\n                              //Pass the value of 'button' to be stored in both the 'value' property and the 'key' property\r\n                              value= { button }\r\n                              key= { button }\r\n                            >\r\n                              {/* render the button */}\r\n                              { button } \r\n                            </button>          \r\n                    })\r\n                }\r\n                 {/* clear button */}\r\n                 {/* Change the state of 'inputValue' through 'setInputValue' and leave it empty */}\r\n                 <button\r\n                    className=\"ac\"  \r\n                    onClick={() => setInputValue(\"\")} value=\"\">\r\n                AC\r\n                </button>\r\n\r\n                </div>\r\n\r\n                <div>\r\n\r\n                 {/* \"=\" button */}\r\n                 {/* When the 'OnClick' event is executed, the state of the 'inputValue' changes through 'setInputValue'\r\n                  'eval' evaluates the string of characters entered in our 'inputValue' converted by the expression 'String',\r\n                  creating the output needed */}\r\n                <button\r\n                    className=\"equal\"\r\n                    onClick={() => {\r\n                        setInputValue(\r\n                            eval(String(inputValue)) \r\n                        );\r\n                            console.log(inputValue);\r\n                    }}\r\n                    value=\"=\"\r\n                >\r\n                =\r\n                </button>\r\n            </div>   \r\n        </>\r\n    )\r\n}\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport { Calculator } from './Calculator';\n\nReactDOM.render(\n  \n    <Calculator />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}